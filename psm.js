const fs = require('fs');
const path = require('path');
const TelegramBot = require('node-telegram-bot-api');

// üîπ –¢–æ–∫–µ–Ω –±–æ—Ç–∞
const token = '7774876781:AAGZmGJtaI7e14IBTZJTZWVbFfzv4wWzSQM';
const bot = new TelegramBot(token, { polling: true });

// üîπ –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
const reportsFile = path.join(__dirname, 'reports.json');
const usersFile = path.join(__dirname, 'users.json');

// üîπ ID –≥—Ä—É–ø–ø—ã –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤
const reportsGroupId = -1002293411618;

// üîπ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–º–æ–≥—É—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç—ã)
const adminIds = [634391096, 2030128216];

// üîπ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–¥–∞—á–∏ –æ—Ç—á—ë—Ç–æ–≤
let reportsLocked = false;

// üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º –∏—Ö
if (!fs.existsSync(reportsFile)) fs.writeFileSync(reportsFile, JSON.stringify({}));
if (!fs.existsSync(usersFile)) fs.writeFileSync(usersFile, JSON.stringify({}));

// üîπ –•—Ä–∞–Ω–∏–ª–∏—â–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ç—á—ë—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userReports = {};

// üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function checkUserRole(userId) {
    const users = JSON.parse(fs.readFileSync(usersFile, 'utf-8'));
    return users[userId] && users[userId].role === 'worker';
}

// üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø–æ–¥–∞–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—á—ë—Ç –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ
function hasSubmittedReport(chatId) {
    const reports = JSON.parse(fs.readFileSync(reportsFile, 'utf-8'));
    const userReport = reports[chatId];
    if (!userReport) return false;

    const lastSubmissionDate = new Date(userReport.date);
    const currentDate = new Date();
    return (currentDate - lastSubmissionDate) / (1000 * 60 * 60 * 24) < 7;
}

// üîπ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç—á—ë—Ç–∞
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;

    if (!checkUserRole(chatId)) {
        return bot.sendMessage(chatId, 'üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–æ–≤.');
    }

    if (reportsLocked) {
        return bot.sendMessage(chatId, 'üö´ –ü–æ–¥–∞—á–∞ –æ—Ç—á—ë—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.');
    }

    if (new Date().getDay() !== 0) {
        return bot.sendMessage(chatId, 'üìÖ –ö–æ–º–∞–Ω–¥–∞ /start –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è–º.');
    }

    if (hasSubmittedReport(chatId)) {
        return bot.sendMessage(chatId, '‚úÖ –í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –æ—Ç—á—ë—Ç –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ.');
    }

    userReports[chatId] = {};

    bot.sendMessage(chatId, 'üìã –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Å–¥–µ–ª–∞–ª–∏ –∑–∞ –Ω–µ–¥–µ–ª—é:', {
        reply_markup: {
            inline_keyboard: [
                [{ text: '–û—Ñ–æ—Ä–º–ª–µ–Ω–æ —à—Ç—Ä–∞—Ñ–æ–≤', callback_data: 'fines_processed' }],
                [{ text: '–ü–æ—Å–∞–¥–æ–∫ –≤ –ö–ü–ó', callback_data: 'detentions' }],
                [{ text: '–î–µ–∂—É—Ä—Å—Ç–≤ –≤ —Å—É–¥–∞—Ö', callback_data: 'duties' }],
                [{ text: '–û–±—Ö–æ–¥–æ–≤ –ø–æ –±–∞–∑–∞–º', callback_data: 'patrols' }],
                [{ text: '–£—á–∞—Å—Ç–∏–π –≤ —Ä–µ–π–¥–∞—Ö', callback_data: 'raids' }],
                [{ text: '–í—ã–¥–∞–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤', callback_data: 'documents_issued' }],
                [{ text: '‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data: 'confirm' }]
            ]
        }
    });
});

// üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
bot.on('callback_query', (query) => {
    const chatId = query.message.chat.id;
    const data = query.data;

    if (!userReports[chatId]) {
        return bot.sendMessage(chatId, '‚ö†Ô∏è –ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start.');
    }

    if (data === 'confirm') {
        const report = userReports[chatId];
        const confirmationMessage =
            `üìù *–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à –æ—Ç—á—ë—Ç:*\n\n` +
            `- üìã *–®—Ç—Ä–∞—Ñ–æ–≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ:* ${report.fines_processed || 0}\n` +
            `- üöî *–ü–æ—Å–∞–¥–æ–∫ –≤ –ö–ü–ó:* ${report.detentions || 0}\n` +
            `- ‚öñÔ∏è *–î–µ–∂—É—Ä—Å—Ç–≤ –≤ —Å—É–¥–∞—Ö:* ${report.duties || 0}\n` +
            `- üö® *–û–±—Ö–æ–¥–æ–≤ –ø–æ –±–∞–∑–∞–º:* ${report.patrols || 0}\n` +
            `- üîç *–£—á–∞—Å—Ç–∏–π –≤ —Ä–µ–π–¥–∞—Ö:* ${report.raids || 0}\n` +
            `- üìú *–í—ã–¥–∞–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:* ${report.documents_issued || 0}`;

        return bot.sendMessage(chatId, confirmationMessage, {
            parse_mode: "Markdown",
            reply_markup: {
                inline_keyboard: [
                    [{ text: '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data: 'save' }],
                    [{ text: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', callback_data: 'cancel' }]
                ]
            }
        });
    }

    if (data === 'save') {
        const reports = JSON.parse(fs.readFileSync(reportsFile, 'utf-8'));
        reports[chatId] = { ...userReports[chatId], date: new Date().toISOString() };
        fs.writeFileSync(reportsFile, JSON.stringify(reports, null, 2));

        const reportMessage =
            `üìù *–û—Ç—á—ë—Ç –æ—Ç @${query.from.username || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}:*\n\n` +
            `- üìã *–®—Ç—Ä–∞—Ñ–æ–≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ:* ${userReports[chatId].fines_processed || 0}\n` +
            `- üöî *–ü–æ—Å–∞–¥–æ–∫ –≤ –ö–ü–ó:* ${userReports[chatId].detentions || 0}\n` +
            `- ‚öñÔ∏è *–î–µ–∂—É—Ä—Å—Ç–≤ –≤ —Å—É–¥–∞—Ö:* ${userReports[chatId].duties || 0}\n` +
            `- üö® *–û–±—Ö–æ–¥–æ–≤ –ø–æ –±–∞–∑–∞–º:* ${userReports[chatId].patrols || 0}\n` +
            `- üîç *–£—á–∞—Å—Ç–∏–π –≤ —Ä–µ–π–¥–∞—Ö:* ${userReports[chatId].raids || 0}\n` +
            `- üìú *–í—ã–¥–∞–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:* ${userReports[chatId].documents_issued || 0}`;

        bot.sendMessage(reportsGroupId, reportMessage, { parse_mode: "Markdown" });
        bot.sendMessage(chatId, '‚úÖ –í–∞—à –æ—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
        delete userReports[chatId];
        return;
    }

    if (data === 'cancel') {
        bot.sendMessage(chatId, '‚ùå –û—Ç—á—ë—Ç –æ—Ç–º–µ–Ω—ë–Ω.');
        delete userReports[chatId];
        return;
    }

    bot.sendMessage(chatId, `–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:`);
    userReports[chatId].currentCategory = data;
    
    bot.onText(/^\d+$/, (msg) => {
        const chatId = msg.chat.id;
        const number = parseInt(msg.text, 10);
    
        if (!userReports[chatId]) return;
    
        const currentCategory = userReports[chatId].currentCategory;
        if (currentCategory) {
            userReports[chatId][currentCategory] = number;
            delete userReports[chatId].currentCategory;
    
            bot.sendMessage(chatId, `‚úÖ –í—ã –≤–≤–µ–ª–∏ ${number} –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *${currentCategory}*.`);
            bot.sendMessage(chatId, '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ó–∞–≤–µ—Ä—à–∏—Ç—å".', {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: '–û—Ñ–æ—Ä–º–ª–µ–Ω–æ —à—Ç—Ä–∞—Ñ–æ–≤', callback_data: 'fines_processed' }],
                        [{ text: '–ü–æ—Å–∞–¥–æ–∫ –≤ –ö–ü–ó', callback_data: 'detentions' }],
                        [{ text: '–î–µ–∂—É—Ä—Å—Ç–≤ –≤ —Å—É–¥–∞—Ö', callback_data: 'duties' }],
                        [{ text: '–û–±—Ö–æ–¥–æ–≤ –ø–æ –±–∞–∑–∞–º', callback_data: 'patrols' }],
                        [{ text: '–£—á–∞—Å—Ç–∏–π –≤ —Ä–µ–π–¥–∞—Ö', callback_data: 'raids' }],
                        [{ text: '–í—ã–¥–∞–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤', callback_data: 'documents_issued' }],
                        [{ text: '‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data: 'confirm' }]
                    ]
                }
            });
        }
    });
    
});

// üîπ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–¥–∞—á–∏ –æ—Ç—á—ë—Ç–æ–≤
bot.onText(/\/lock_reports/, (msg) => {
    if (!adminIds.includes(msg.from.id)) return;
    reportsLocked = true;
    bot.sendMessage(msg.chat.id, 'üîí –ü–æ–¥–∞—á–∞ –æ—Ç—á—ë—Ç–æ–≤ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.');
});

// üîπ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–¥–∞—á–∏ –æ—Ç—á—ë—Ç–æ–≤
bot.onText(/\/unlock_reports/, (msg) => {
    if (!adminIds.includes(msg.from.id)) return;
    reportsLocked = false;
    bot.sendMessage(msg.chat.id, '‚úÖ –ü–æ–¥–∞—á–∞ –æ—Ç—á—ë—Ç–æ–≤ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.');
});

// üîπ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–∏—á–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞
bot.onText(/\/myreport/, (msg) => {
    const chatId = msg.chat.id;
    const reports = JSON.parse(fs.readFileSync(reportsFile, 'utf-8'));
    const report = reports[chatId];

    if (!report) return bot.sendMessage(chatId, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –æ—Ç—á—ë—Ç–∞.');

    bot.sendMessage(chatId, `üìã –í–∞—à –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç—á—ë—Ç:\n${JSON.stringify(report, null, 2)}`);
});
